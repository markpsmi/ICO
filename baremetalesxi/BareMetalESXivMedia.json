[{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"SSH command to execute on the remote server. SSH task executor supports executing non-interactive and prompts based interactive commands.\n","Label":"SSH Command Type","Name":"SshCommandType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"CommandType","EnableParameters":["ExpectPrompts","ShellPrompt"],"Name":"enablePrompt","ObjectType":"workflow.ParameterSet","Value":"InteractiveCmd"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The SSH commands that are to be run on the remote server. Multiple commands can be configured to be run on the given target by chaining the commands with special characters - '&&'  ';' '|' etc. Note that command chaining is allowed only when the command type is Non-Interactive.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Command","Name":"Command","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The SSH command type to be run on the remote server. The SSH task supports running Non-Interactive and expect prompts based Interactive commands.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Command Type","Name":"CommandType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Non-Interactive","ObjectType":"workflow.EnumEntry","Value":"NonInteractiveCmd"},{"Label":"Interactive","ObjectType":"workflow.EnumEntry","Value":"InteractiveCmd"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CustomDataTypeName":"ExpectPrompt","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Expect prompts required as part of command execution. It is a collection of ExpectPrompt type.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Expect Prompts","Max":10,"Min":1,"Name":"ExpectPrompts","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The regular expression of the Shell Prompt of the remote server or target. You must provide the complete regular expression of the Shell Prompt and it must end with special character '$' to match the end of the Shell Prompt string.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Shell Prompt","Name":"ShellPrompt","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":".*\\$$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Response parser framework supports extraction of required values from API/device responses. These responses may be of various content types such as XML, JSON, etc. The values of importance are modeled as parameters in the response parser framework.\nThe parameters can be of a scalar value type or a collection of values. A group of related parameters can be modeled as a single complex type parameter. These complex types will be very useful to extract a set of repeating group of related parameters.\nA response parser specification defines the set of parameters that need to be extracted from the content. The response parser specification allows complex type definitions to be defined for any complex parameters.","Label":"Response Parser","Name":"TextResponseParserType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CustomDataTypeName":"TextResponseParameter","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The collection of parameters that need to be extracted from the API response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Parameters","Max":10,"Min":1,"Name":"Parameters","ObjectType":"workflow.ArrayDataType"}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Executes SSH commands against the given endpoint. This task can be executed on targets added as SSH Endpoint or Ansible Endpoint in Intersight.\n","Label":"Invoke SSH Commands","Name":"InvokeSshCommands","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The external target on which the SSH commands are run. The SSH commands can be run only on targets added as SSH Endpoint or Ansible Endpoint target in Intersight and are in the connected state.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"External Target","Name":"Target","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["Name","TargetType"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/Targets?$filter=((TargetType eq SSHEndpoint or TargetType eq AnsibleEndpoint) and Status eq Connected)","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["asset.Target"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The SSH commands that are run on the remote server along with the details of the SSH command.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"SSH Command","Name":"SshCommand","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"SshCommandType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The command timeout in seconds for the execution of the command against the given endpoint. The default command timeout is 600 seconds. Range is from 10 to 7200 seconds.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Command Timeout","Name":"Timeout","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":7200,"Min":10,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"}},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The list of expected command exit codes of the execution of the command against the given endpoint. Default exit code of 0 is used to determine the status of command execution when this input is not provided.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Expected Exit Codes","Max":10,"Name":"ExpectedExitCodes","ObjectType":"workflow.ArrayDataType"},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Set this value to True if the entire command response needs to be displayed as part of the task output. Default value is false.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Show Command Output","Name":"ShowCommandOutput","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The structure of the response parser which provides the list of values that need to be extracted from the response.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Response Parser","Name":"ResponseParser","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"TextResponseParserType","ObjectType":"workflow.CustomDataProperty"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The exit code after the execution of the command against the given endpoint.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Exit Code","Name":"ExitCode","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The complete response after the execution of the command against the given endpoint.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Command Output","Name":"CommandOutput","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Captures the error encountered while executing the command.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Command Execution Error","Name":"CommandExecutionError","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The extracted parameters after the execution of the command against the given endpoint.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Extracted Parameters","Name":"ExtractedParameters","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"json"}}],"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":7200,"TimeoutPolicy":"Timeout"},"RollbackTasks":[],"SecurePropAccess":true,"SharedScope":"shared","Tags":[{"Key":"category","Value":"Executors"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","Description":"Configures the chosen device as the one-time boot device for the server. This device will be used when the server powers on the next time.","Label":"Set Server One Time Boot Device","Name":"SetServerOneTimeBootDevice","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode"],"DisplayAttributes":["Name"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$filter='ManagementMode' eq 'IntersightStandalone'","SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"One Time Boot Device","Name":"OneTimeBootDevice","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq 'boot.ConfiguredDevice')&$orderby=Name&$select=Name","ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":120,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","Label":"Set Server Power State","Name":"SetServerPowerState","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","DisplayAttributes":["Name"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$filter=PlatformType in ('IMC','IMCBlade','IMCM5','IMCM4')","SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Desired Power State","Name":"PowerState","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Power On","ObjectType":"workflow.EnumEntry","Value":"Power On"},{"Label":"Power Off","ObjectType":"workflow.EnumEntry","Value":"Power Off"},{"Label":"Power Cycle","ObjectType":"workflow.EnumEntry","Value":"Power Cycle"},{"Label":"Hard Reset","ObjectType":"workflow.EnumEntry","Value":"Hard Reset"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Workflow Triggered","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Workflow Triggered","Name":"Workflow","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty"}]}],"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":86400,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"A DNS name, IPv4 or IPv6 address.\n\nThis type accepts the following values:\n- Host name, e.g. 'my-host123'.\n- Fully-qualified host name, e.g. my-host123.example.com.\n- The host name and domain can contain letters, digits and hyphen.\n- The host name and sub-domains must start with a letter or digit. The top-level domain must start with a letter.\n- The top-level domain must start with a letter.\n- IPv4 address, e.g. 192.168.1.4.\n- IPv6 address, e.g. fe80::20c:29ff:fe3c:55f1.\n","Label":"Internet Address Type","Name":"InternetAddressType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"A DNS name, IPv4 or IPv6 address.\n\nThis type accepts the following values:\n- Host name, e.g. 'my-host123'.\n- Fully-qualified host name, e.g. my-host123.example.com.\n- The host name and domain can contain letters, digits and hyphen.\n- The host name and sub-domains must start with a letter or digit. The top-level domain must start with a letter.\n- The top-level domain must start with a letter.\n- IPv4 address, e.g. 192.168.1.4.\n- IPv6 address, e.g. fe80::20c:29ff:fe3c:55f1.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Internet Address","Name":"InternetAddress","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^[A-Za-z]([A-Za-z0-9-]*[A-Za-z0-9])?$|^[A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])?)*(\\.[A-Za-z]([A-Za-z0-9-]*[A-Za-z0-9])?)$|^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Type definition for credentials for an external resource.","Label":"Credential Type","Name":"CredentialType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Username to access an external resource","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Username","Name":"Username","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Password associated with the username.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Password","Name":"Password","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Type definition for the details of a remote file.","Label":"Remote File Type","Name":"RemoteFileType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"IP address or hostname of the remote server.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host Name","Name":"HostName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"InternetAddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"URL path to the location of the image on the remote server. The preferred format is '/path'.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remote Path","Name":"RemotePath","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the remote file. It should be of .img format for HDD Virtual Media mapping and .iso format for CDD Virtual Media mapping.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remote File","Name":"RemoteFile","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Credentials to access the remote resource.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Credentials","Name":"Credentials","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"CredentialType","ObjectType":"workflow.CustomDataProperty"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Dismounts the selected vMedia device on the server.\nUse this task only for servers that are not associated with server profiles.\nFor servers that are associated with server profiles, change the virtual media policy and deploy the server profile.\n","Label":"Dismount Server Virtual Media Device","Name":"DismountServerVirtualMediaDevice","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server on which the device needs to dismounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode"],"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter=(ManagementMode in ('IntersightStandalone')) and ('Tags.Key' eq 'Intersight.LicenseTier' and 'Tags.Value' eq 'Premier')","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the volume to be dismounted. If not provided, all the volumes on the server will be dismounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":true},"Description":"If set to true, volume is deleted and if set to false, volume is not deleted but is unmapped and saved.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Delete Mapping","Name":"DeleteMapping","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Mounts the given vMedia device on to the server.\nUse this task only for servers that are not associated with server profiles.\nFor servers that are associated with profiles, change the virtual media policy and deploy the server profile.\n","Label":"Mount Server Virtual Media Device","Name":"MountServerVirtualMediaDevice","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server on which the device needs to be mounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode"],"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter=(ManagementMode in ('IntersightStandalone')) and ('Tags.Key' eq 'Intersight.LicenseTier' and 'Tags.Value' eq 'Premier')","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the volume to be mounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":63,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9_.-]{1,64}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Protocol to mount the vMedia device","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Mount Protocol","Name":"MountProtocol","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"NFS","ObjectType":"workflow.EnumEntry","Value":"nfs"},{"Label":"CIFS","ObjectType":"workflow.EnumEntry","Value":"cifs"},{"Label":"HTTP","ObjectType":"workflow.EnumEntry","Value":"http"},{"Label":"HTTPS","ObjectType":"workflow.EnumEntry","Value":"https"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of Authentication protocol used for CIFS protocol","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Authentication Protocol","Name":"AuthenticationProtocol","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"Ntlm","ObjectType":"workflow.EnumEntry","Value":"ntlm"},{"Label":"Ntlmi","ObjectType":"workflow.EnumEntry","Value":"ntlmi"},{"Label":"Ntlmv2","ObjectType":"workflow.EnumEntry","Value":"ntlmv2"},{"Label":"Ntlmv2i","ObjectType":"workflow.EnumEntry","Value":"ntlmv2i"},{"Label":"Ntlmsspi","ObjectType":"workflow.EnumEntry","Value":"ntlmsspi"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Details of the remote file to mount.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remote File","Name":"RemoteFile","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"RemoteFileType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Mount options for the Virtual Media mapping. The field can be left blank or filled in a comma separated list with the following options.\nFor NFS, supported options are ro, rw, nolock, noexec, soft, port=VALUE, timeo=VALUE, retry=VALUE.\nFor CIFS, supported options are soft, nounix, noserverino, guest.\nFor CIFS version < 3.0, vers=VALUE is mandatory. e.g. vers=2.0\nFor HTTP/HTTPS, the only supported option is noauto.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Mount Options","Name":"MountOptions","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":5,"RetryDelay":20,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Dismounts the vMedia device on the server.","InputParameters":{"Server":"${task.input.Server}","VolumeName":"${task.input.VolumeName}"},"Name":"DismountServerVirtualMediaDevice","ObjectType":"workflow.RollbackTask","Version":1}],"SecurePropAccess":true,"SharedScope":"shared","Tags":[{"Key":"category","Value":"Compute"},{"Key":"platformType.IMC","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Datacenter","Label":"Datacenter","Name":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatacenter)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Cluster.","Label":"Cluster","Name":"HypervisorClusterType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseCluster)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Hypervisor Host.","Label":"ESXi Host","Name":"HypervisorHostType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":255,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^(([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)|[a-zA-Z0-9]+([a-zA-Z0-9-._]*[a-zA-Z0-9]))$"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseHost)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove host from a selected hypervisor. Requires datacenter and host as inputs.  On successful execution, host name is generated as output","Label":"Remove Hypervisor Host","Name":"RemoveHypervisorHost","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the host","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name or IP address of the host to be removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the host that was removed","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":500,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Virtualization"},{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Add host to the selected hypervisor. Requires datacenter, host IP/name, username, password as inputs. On successful execution, host name is generated as output.","Label":"New Hypervisor Host","Name":"NewHypervisorHost","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter to which host is to be added.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster to which host is to be added.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host name or IP address of the host to be added.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Username to be used for host access.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Username","Name":"Username","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Password to be used for host access.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Password","Name":"Password","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Connection to host will be established after successful addition.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Connect Now","Name":"ConnectNow","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Managed Object Reference Identity","Name":"HostId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":500,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove host from a selected hypervisor. Requires datacenter and host as inputs.  On successful execution, host name is generated as output.","InputParameters":{"Datacenter":"${task.input.Datacenter}","Folder":"${task.input.Folder}","Host":"${task.input.Host}","Vcenter":"${task.input.Vcenter}"},"Name":"RemoveHypervisorHost","ObjectType":"workflow.RollbackTask","Version":1}],"SecurePropAccess":true,"SharedScope":"shared","Tags":[{"Key":"category","Value":"Virtualization"},{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"marksesxi"},"Description":"Name of the Target Server Profile.\nIf the name is provided in the input and if a profile with the same name exists, then this task fails.\nIf the name is not provided, the target prefix and suffix is used to identify the available profile name.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host Name","Name":"HostName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":63,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":"10.21.2.10"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Ip Address","Name":"IpAddress","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue","Override":true},"Description":"Server on which the device needs to be mounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode"],"DisplayAttributes":["Name"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$filter=(ManagementMode in ('IntersightStandalone')) and ('Tags.Key' eq 'Intersight.LicenseTier' and 'Tags.Value' eq 'Premier')","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true}],"InputParameterSet":[],"Label":"Provision Bare Metal ESXi vMedia","Name":"ProvisionBareMetalESXivMedia","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"Properties":{"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","SupportStatus":"Supported"},"SharedScope":"user","Tasks":[{"Name":"StartTask","NextTask":"InvokeSshCommands2","ObjectType":"workflow.StartTask"},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"},{"CatalogMoid":"shared","Description":"Executes SSH commands against the given endpoint. This task can be executed on targets added as SSH Endpoint or Ansible Endpoint in Intersight.\n","InputParameters":{"SshCommand":{"Command":"/tmp/makeESXi {{.global.workflow.input.HostName}}","CommandType":"NonInteractiveCmd"}},"Label":"Create New ESXi ISO","Name":"InvokeSshCommands1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"MountServerVirtualMediaDevice1","TaskDefinitionName":"InvokeSshCommands","Version":1},{"CatalogMoid":"shared","Description":"Configures the chosen device as the one-time boot device for the server. This device will be used when the server powers on the next time. If no device is chosen, It clears the one time boot configuration.","InputParameters":{"OneTimeBootDevice":"vmedia","Server":"${workflow.input.Server}"},"Label":"Set Boot Policy Boot from vmedia","Name":"SetServerOneTimeBootDevice1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SetServerPowerState1","TaskDefinitionName":"SetServerOneTimeBootDevice","Version":2},{"CatalogMoid":"shared","Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","InputParameters":{"PowerState":"Hard Reset","Server":"${workflow.input.Server}"},"Label":"Power On Server","Name":"SetServerPowerState1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"InvokeSshCommands3","TaskDefinitionName":"SetServerPowerState","Version":2},{"CatalogMoid":"shared","Description":"Mounts the given vMedia device on to the server.\nUse this task only for servers that are not associated with server profiles.\nFor servers that are associated with profiles, change the virtual media policy and deploy the server profile.\n","InputParameters":{"MountProtocol":"cifs","RemoteFile":{"Credentials":{"Username":"smbuser"},"HostName":"10.21.1.253","RemoteFile":"custom_esxi.iso","RemotePath":"/bits/{{.global.workflow.input.HostName}}/"},"Server":"${workflow.input.Server}","VolumeName":"esi67"},"Label":"Mount Server Virtual Media Device","Name":"MountServerVirtualMediaDevice1","ObjectType":"workflow.WorkerTask","OnSuccess":"SetServerOneTimeBootDevice1","TaskDefinitionName":"MountServerVirtualMediaDevice","Version":1},{"CatalogMoid":"shared","Description":"Executes SSH commands against the given endpoint. This task can be executed on targets added as SSH Endpoint or Ansible Endpoint in Intersight.\n","InputParameters":{"SshCommand":{"Command":"/tmp/updateks.sh {{.global.workflow.input.HostName}} {{.global.workflow.input.IpAddress}}","CommandType":"NonInteractiveCmd"}},"Label":"Update Kickstart File","Name":"InvokeSshCommands2","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"InvokeSshCommands1","TaskDefinitionName":"InvokeSshCommands","Version":1},{"CatalogMoid":"shared","Description":"Executes SSH commands against the given endpoint. This task can be executed on targets added as SSH Endpoint or Ansible Endpoint in Intersight.\n","InputParameters":{"SshCommand":{"Command":"/tmp/pingit.sh {{.global.workflow.input.IpAddress}}","CommandType":"NonInteractiveCmd"},"Timeout":7200},"Label":"Wait for OS to Install","Name":"InvokeSshCommands3","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"NewHypervisorHost1","TaskDefinitionName":"InvokeSshCommands","Version":1},{"CatalogMoid":"shared","Description":"Add host to the selected hypervisor. Requires datacenter, host IP/name, username, password as inputs. On successful execution, host name is generated as output.","InputParameters":{"Cluster":"/ACI2-Lab/host/HX-Cluster","ConnectNow":true,"Datacenter":"/ACI2-Lab","Host":"${workflow.input.IpAddress}","Username":"root"},"Label":"New Hypervisor Host","Name":"NewHypervisorHost1","ObjectType":"workflow.WorkerTask","OnFailure":"FailureEndTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"NewHypervisorHost","Version":1}],"UiInputFilters":[],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":159.5000000000001,"Y":2},{"Name":"SuccessEndTask","X":145.5,"Y":569},{"Name":"FailureEndTask","X":316.55435526972843,"Y":565.9999999999999},{"Name":"InvokeSshCommands1","X":100.90214338578335,"Y":132.5},{"Name":"SetServerOneTimeBootDevice1","X":89.99999999999989,"Y":264.0000000000001},{"Name":"SetServerPowerState1","X":88.99999999999989,"Y":331},{"Name":"MountServerVirtualMediaDevice1","X":96.99999999999989,"Y":195.50000000000006},{"Name":"InvokeSshCommands2","X":97.63636363636351,"Y":71},{"Name":"InvokeSshCommands3","X":88.5,"Y":402},{"Name":"NewHypervisorHost1","X":86.5,"Y":477}]},"VariableDefinition":[],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"text","FileTransferToRemote":{"ObjectType":"workflow.FileTransfer"},"Label":"Start Ssh Session","MessageType":"NewSession","Name":"StartSshSession","ObjectType":"workflow.SshSession","SshConfiguration":{"ObjectType":"workflow.SshConfig"}},{"CaptureCompleteResponse":"{{Btoa .global.task.input.ShowCommandOutput}}","ContentType":"text","ExpectedExitCodes":"{{- if index .global.task.input \"ExpectedExitCodes\" -}}\n  {{.global.task.input.ExpectedExitCodes | ToJson}}\n{{- end -}}","FileTransferToRemote":{"ObjectType":"workflow.FileTransfer"},"Label":"Invoke Ssh Operation","MessageType":"ExecuteCommand","Name":"InvokeSshOperation","ObjectType":"workflow.SshSession","ResponseSpec":"{{- if index .global.task.input \"ResponseParser\" -}}\n  {{.global.task.input.ResponseParser | ToJson}}\n{{- end -}}","SshCommand":"{{- if index .global.task.input \"SshCommand\" -}}\n  {{.global.task.input.SshCommand | ToJson}}\n{{- end -}}","SshConfiguration":{"ObjectType":"workflow.SshConfig"},"SshOpTimeout":"{{- if index .global.task.input \"Timeout\" -}}\n  {{Itoa .global.task.input.Timeout}}\n{{- end -}}"},{"ContentType":"text","FileTransferToRemote":{"ObjectType":"workflow.FileTransfer"},"Label":"Close Ssh Session","MessageType":"CloseSession","Name":"CloseSshSession","ObjectType":"workflow.SshSession","SshConfiguration":{"ObjectType":"workflow.SshConfig"}}],"ClassId":"workflow.SshBatchExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Generic SSH Batch Task","Name":"GenericSshBatchTask","ObjectType":"workflow.SshBatchExecutor","Output":{"CommandExecutionError":"{{- if index .global.InvokeSshOperation.output \"CommandExecutionError\" -}}\n  {{.global.InvokeSshOperation.output.CommandExecutionError}}\n{{- end -}}","CommandOutput":"{{- if index .global.InvokeSshOperation.output \"CommandResponse\" -}}\n  {{.global.InvokeSshOperation.output.CommandResponse}}\n{{- end -}}","ExitCode":"{{.global.InvokeSshOperation.output.ExitCode}}","ExtractedParameters":"{{- if index .global.InvokeSshOperation \"output\" -}}\n  {{RemoveKeysFromMap .global.InvokeSshOperation.output \"ExitCode\" \"CommandResponse\" \"CommandExecutionError\" }}\n{{- end -}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"InvokeSshCommands\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/SshBatchExecutors","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Configures the chosen device as the one-time boot device for the server. This device will be used when the server powers on the next time.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerOneTimeBootDevice\" and Version eq 1"},"Label":"SetStandaloneServerOneTimeBootDeviceImpl","Name":"SetStandaloneServerOneTimeBootDeviceImpl","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode"],"DisplayAttributes":["Name"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$filter='ManagementMode' eq 'IntersightStandalone'","SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"One Time Boot Device","Name":"OneTimeBootDevice","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq 'boot.ConfiguredDevice')&$orderby=Name&$select=Name","ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":120,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.IMC","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Configures the chosen device as the one-time boot device for the FI Managed server. This device will be used when the server powers on the next time.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerOneTimeBootDevice\" and Version eq 1"},"Label":"SetFIManagedServerOneTimeBootDeviceImpl","Name":"SetFIManagedServerOneTimeBootDeviceImpl","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode"],"DisplayAttributes":["Name"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$filter='ManagementMode' eq 'IntersightStandalone'","SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"One Time Boot Device","Name":"OneTimeBootDevice","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq 'boot.ConfiguredDevice')&$orderby=Name&$select=Name","ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":3,"RetryDelay":60,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":120,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerPowerState\" and Version eq 1"},"Label":"SetServerPowerStateImpl","Name":"SetServerPowerStateImpl","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","DisplayAttributes":["Name"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$filter=PlatformType in ('IMC','IMCBlade','IMCM5','IMCM4')","SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Desired Power State","Name":"PowerState","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Power On","ObjectType":"workflow.EnumEntry","Value":"Power On"},{"Label":"Power Off","ObjectType":"workflow.EnumEntry","Value":"Power Off"},{"Label":"Power Cycle","ObjectType":"workflow.EnumEntry","Value":"Power Cycle"},{"Label":"Hard Reset","ObjectType":"workflow.EnumEntry","Value":"Hard Reset"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Workflow Triggered","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Workflow Triggered","Name":"Workflow","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty"}]}],"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":86400,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.IMC","Value":"true"},{"Key":"platformType.IMCBlade","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Mounts vMedia device on a standalone server","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"DismountServerVirtualMediaDevice\" and Version eq 1"},"Label":"DismountStandaloneServerVirtualMediaDevice","Name":"DismountStandaloneServerVirtualMediaDevice","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server on which the device needs to dismounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode"],"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter=(ManagementMode in ('IntersightStandalone')) and ('Tags.Key' eq 'Intersight.LicenseTier' and 'Tags.Value' eq 'Premier')","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the volume to be dismounted. If not provided, all the volumes on the server will be dismounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue","Override":true,"Value":true},"Description":"If set to true, volume is deleted and if set to false, volume is not deleted but is unmapped and saved.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Delete Mapping","Name":"DeleteMapping","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":600,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.IMC","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Mounts vMedia device on a standalone server","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"MountServerVirtualMediaDevice\" and Version eq 1"},"Label":"MountStandaloneServerVirtualMediaDevice","Name":"MountStandaloneServerVirtualMediaDevice","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Server on which the device needs to be mounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Server","Name":"Server","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ManagementMode"],"DisplayAttributes":["Name","PlatformType","MgmtIpAddress","RegisteredDevice.ConnectionStatus","Serial","Firmware","ManagementMode","AssetTag","UserLabel"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice,Name,PlatformType,ManagementMode,MgmtIpAddress,Serial,Firmware,UserLabel,AssetTag&$filter=(ManagementMode in ('IntersightStandalone')) and ('Tags.Key' eq 'Intersight.LicenseTier' and 'Tags.Value' eq 'Premier')","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["compute.RackUnit","compute.Blade","compute.PhysicalSummary"]}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the volume to be mounted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":63,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9_.-]{1,64}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Protocol to mount the vMedia device","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Mount Protocol","Name":"MountProtocol","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"NFS","ObjectType":"workflow.EnumEntry","Value":"nfs"},{"Label":"CIFS","ObjectType":"workflow.EnumEntry","Value":"cifs"},{"Label":"HTTP","ObjectType":"workflow.EnumEntry","Value":"http"},{"Label":"HTTPS","ObjectType":"workflow.EnumEntry","Value":"https"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of Authentication protocol used for CIFS protocol","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Authentication Protocol","Name":"AuthenticationProtocol","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"Ntlm","ObjectType":"workflow.EnumEntry","Value":"ntlm"},{"Label":"Ntlmi","ObjectType":"workflow.EnumEntry","Value":"ntlmi"},{"Label":"Ntlmv2","ObjectType":"workflow.EnumEntry","Value":"ntlmv2"},{"Label":"Ntlmv2i","ObjectType":"workflow.EnumEntry","Value":"ntlmv2i"},{"Label":"Ntlmsspi","ObjectType":"workflow.EnumEntry","Value":"ntlmsspi"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Details of the remote file to mount.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remote File","Name":"RemoteFile","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"RemoteFileType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Mount options for the Virtual Media mapping. The field can be left blank or filled in a comma separated list with the following options.\nFor NFS, supported options are ro, rw, nolock, noexec, soft, port=VALUE, timeo=VALUE, retry=VALUE.\nFor CIFS, supported options are soft, nounix, noserverino, guest.\nFor CIFS version < 3.0, vers=VALUE is mandatory. e.g. vers=2.0\nFor HTTP/HTTPS, the only supported option is noauto.\n","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Mount Options","Name":"MountOptions","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"ObjectType":"workflow.Properties","OutputDefinition":[],"RetryCount":5,"RetryDelay":20,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SecurePropAccess":true,"SharedScope":"shared","Tags":[{"Key":"platformType.IMC","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove host from selected hypervisor","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveHypervisorHost\" and Version eq 1"},"Label":"Remove host from hypervisor","Name":"RemoveVmwareHost","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the host","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name or IP address of the host to be removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the host that was removed","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":500,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"New Vmware Host","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewHypervisorHost\" and Version eq 1"},"Label":"New Vmware Host","Name":"NewVmwareHost","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter to which host is to be added.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster to which host is to be added.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host name or IP address of the host to be added.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Username to be used for host access.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Username","Name":"Username","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Password to be used for host access.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Password","Name":"Password","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Connection to host will be established after successful addition.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Connect Now","Name":"ConnectNow","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Managed Object Reference Identity","Name":"HostId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":500,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SecurePropAccess":true,"SharedScope":"shared","Tags":[{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"CheckServerStandalone","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.CheckServerStandalone.output.HttpStatusCode 200}}","Message":"{{.global.CheckServerStandalone.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.CheckServerStandalone.output.ServerMoid) 0}}","Error":true,"Message":"Server with moid {{.global.task.input.Server.Moid}} does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.CheckServerStandalone.output.ServerManagementMode \"IntersightStandalone\"}}","Message":"Server with moid {{.global.task.input.Server.Moid}} is not a Standalone Server","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerMoid","ObjectType":"content.Parameter","Path":"$.Results[0].Moid","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerManagementMode","ObjectType":"content.Parameter","Path":"$.Results[0].ManagementMode","Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/PhysicalSummaries?$filter='Moid' eq '{{.global.task.input.Server.Moid}}'"},{"Body":"<configConfMo dn=\"sys/rack-unit-1/one-time-precision-boot\" inHierarchical=\"true\"> <inConfig> <oneTimePrecisionBootDevice device=\"{{.global.task.input.OneTimeBootDevice}}\" rebootOnUpdate=\"No\"/> </inConfig> </configConfMo>","ContentType":"xml","Name":"SetOneTimeBoot","ObjectType":"workflow.XmlApi","Outcomes":[{"Condition":"{{ne (len .global.SetOneTimeBoot.output.ErrorMsg) 0}}","Message":"{{.global.SetOneTimeBoot.output.ErrorMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ne (len .global.SetOneTimeBoot.output.Error) 0}}","Message":"{{.global.SetOneTimeBoot.output.Error}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"One-Time Boot device is configured to '{{.global.task.input.OneTimeBootDevice}}'","ObjectType":"workflow.Outcome"}],"ResponseSpec":{"ErrorParameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"@errorCode","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorMsg","ObjectType":"content.Parameter","Path":"@errorDescr","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Error","ObjectType":"content.Parameter","Path":"//configConfMo/@errorDescr","Type":"simple"}],"ObjectType":"content.Grammar","Parameters":[],"Types":[]}}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ManagementMode":"IntersightStandalone"}},"Description":"Configures the chosen device as the one-time boot device for the server. This device will be used when the server powers on the next time.","Name":"SetStandaloneServerOneTimeBootDeviceImpl","ObjectType":"workflow.BatchApiExecutor","Output":{},"SharedScope":"shared","SkipOnCondition":"{{not .global.task.input.OneTimeBootDevice}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetStandaloneServerOneTimeBootDeviceImpl\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetServerProfile","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetServerProfile.output.HttpStatusCode 200}}","Message":"{{.global.GetServerProfile.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetServerProfile.output.ServerProfileMoid) 0}}","Message":"Server with moid {{.global.task.input.Server.Moid}} does not have a Server Profile Deployed.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerProfileMoid","ObjectType":"content.Parameter","Path":"$.Results[0].Moid","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ServerProfileName","ObjectType":"content.Parameter","Path":"$.Results[0].Name","Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles?$filter='AssociatedServer.Moid' eq '{{.global.task.input.Server.Moid}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetBootPolicy","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetBootPolicy.output.HttpStatusCode 200}}","Message":"{{.global.GetBootPolicy.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetBootPolicy.output.BootPolicyMoid) 0}}","Message":"Server with moid {{.global.task.input.Server.Moid}} does not have a Boot Policy Deployed.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{eq (len .global.GetBootPolicy.output.BootDevices) 0}}","Message":"One Time Boot device '{{.global.task.input.OneTimeBootDevice}}' is not valid, as it is not configured under Boot Policy.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"BootPolicyMoid","ObjectType":"content.Parameter","Path":"$.Results[0].Moid","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"BootMode","ObjectType":"content.Parameter","Path":"$.Results[0].ConfiguredBootMode","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SecureBoot","ObjectType":"content.Parameter","Path":"$.Results[0].EnforceUefiSecureBoot","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"BootPolicyName","ObjectType":"content.Parameter","Path":"$.Results[0].Name","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"BootDevice","ItemType":"complex","Name":"BootDevices","ObjectType":"content.Parameter","Path":"$.Results[0].BootDevices[?(@.Name == \"{{.global.task.input.OneTimeBootDevice}}\")]","Type":"collection"}],"Types":[{"Name":"BootDevice","ObjectType":"content.ComplexType","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Name","ObjectType":"content.Parameter","Path":"$.Name","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ObjectType","ObjectType":"content.Parameter","Path":"$.ObjectType","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CiscoVIC","ObjectType":"content.Parameter","Path":"$.CiscoVIC","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"PciSlotId","ObjectType":"content.Parameter","Path":"$.PciSlotId","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"MACAddress","ObjectType":"content.Parameter","Path":"$.MACAddress","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Wwpn","ObjectType":"content.Parameter","Path":"$.Wwpn","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Lun","ObjectType":"content.Parameter","Path":"$.Lun","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VmediaSubtype","ObjectType":"content.Parameter","Path":"$.Subtype","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InterfaceName","ObjectType":"content.Parameter","Path":"$.InterfaceName","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"IpType","ObjectType":"content.Parameter","Path":"$.IpType","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"BootLoader","ItemType":"complex","Name":"BootLoader","ObjectType":"content.Parameter","Path":"$.Bootloader","Type":"simple"}]},{"Name":"BootLoader","ObjectType":"content.ComplexType","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Name","ObjectType":"content.Parameter","Path":"$.Name","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Path","ObjectType":"content.Parameter","Path":"$.Path","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Description","ObjectType":"content.Parameter","Path":"$.Description","Type":"simple"}]}]},"TargetType":"Local","Url":"/v1/boot/PrecisionPolicies?$filter='Profiles.Moid' eq '{{.global.GetServerProfile.output.ServerProfileMoid}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetVnicFcIf","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetVnicFcIf.output.HttpStatusCode 200}}","Message":"{{.global.GetVnicFcIf.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetVnicFcIf.output.Name) 0}}","Message":"The Interface Name = {{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}} specified in SAN Boot, not found in Profile's SAN Connectivity Policy.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Name","ObjectType":"content.Parameter","Path":"$.Results[0].Name","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Wwpn","ObjectType":"content.Parameter","Path":"$.Results[0].Wwpn","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"Placement","ItemType":"complex","Name":"Placement","ObjectType":"content.Parameter","Path":"$.Results[0].Placement","Type":"simple"}],"Types":[{"Name":"Placement","ObjectType":"content.ComplexType","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Id","ObjectType":"content.Parameter","Path":"$.Id","Type":"simple"}]}]},"SkipOnCondition":"{{ne (index .global.GetBootPolicy.output.BootDevices 0).ObjectType \"boot.San\"}}","TargetType":"Local","Url":"/v1/vnic/FcIfs?$filter='Name' eq '{{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}}' and 'Profile.Moid' eq '{{.global.GetServerProfile.output.ServerProfileMoid}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetVnicEthIf","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetVnicEthIf.output.HttpStatusCode 200}}","Message":"{{.global.GetVnicEthIf.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq (len .global.GetVnicEthIf.output.Name) 0}}","Message":"The Interface Name = {{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}} specified in PXE Boot, not found in Profile's LAN Connectivity Policy.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Name","ObjectType":"content.Parameter","Path":"$.Results[0].Name","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"MacAddress","ObjectType":"content.Parameter","Path":"$.Results[0].MacAddress","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"Placement","ItemType":"complex","Name":"Placement","ObjectType":"content.Parameter","Path":"$.Results[0].Placement","Type":"simple"}],"Types":[{"Name":"Placement","ObjectType":"content.ComplexType","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Id","ObjectType":"content.Parameter","Path":"$.Id","Type":"simple"}]}]},"SkipOnCondition":"{{ne (index .global.GetBootPolicy.output.BootDevices 0).ObjectType \"boot.Pxe\"}}","TargetType":"Local","Url":"/v1/vnic/EthIfs?$filter='Name' eq '{{(index .global.GetBootPolicy.output.BootDevices 0).InterfaceName}}' and 'Profile.Moid' eq '{{.global.GetServerProfile.output.ServerProfileMoid}}'"},{"Body":"{{$device:=(index .global.GetBootPolicy.output.BootDevices 0)}} {{$inputDevice:=.global.task.input.OneTimeBootDevice}} {\"FlexBootOrder\":{\"FlexBootOrderHeader\":{ {{if eq .global.GetBootPolicy.output.BootMode \"Uefi\"}}\"BootMode\":\"uefi\"{{else}}\"BootMode\":\"legacy\"{{end}}, {{if eq .global.GetBootPolicy.output.SecureBoot true}}\"SecureBoot\":\"enabled\"{{else}}\"SecureBoot\":\"disabled\"{{end}}, \"BootPolicyName\":\"{{.global.GetBootPolicy.output.BootPolicyName}}\",\"ServiceProfile\":\"{{.global.GetServerProfile.output.ServerProfileName}}\",\"Version\":\"2.0\"}, {{if eq $device.Name $inputDevice}} {{if eq $device.ObjectType \"boot.UefiShell\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"UefiShell\",\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.LocalCdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"LocalCDD\",\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.LocalDisk\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"FlexBootTarget\":\"LocalHDD\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":\"{{$bootLoaderName}}\",{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":\"{{$bootLoaderPath}}\",{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":\"{{$deviceName}}\",{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.Usb\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"USB\",\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.VirtualMedia\"}} {{if eq $device.VmediaSubtype \"cimc-mapped-dvd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"CIMCVMediaCDD\",\"BootOrder\":1}]}} {{else if eq $device.VmediaSubtype \"cimc-mapped-hdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"CIMCVMediaHDD\",\"BootOrder\":1}]}} {{else if eq $device.VmediaSubtype \"kvm-mapped-dvd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"KVMVMediaCDD\",\"BootOrder\":1}]}} {{else if eq $device.VmediaSubtype \"kvm-mapped-hdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"KVMVMediaHDD\",\"BootOrder\":1}]}} {{else if eq $device.VmediaSubtype \"kvm-mapped-fdd\"}}\"FlexBootTargets\":[{\"FlexBootTarget\":\"KVMVMediaFDD\",\"BootOrder\":1}]}} {{end}} {{else if eq $device.ObjectType \"boot.SdCard\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"FlexBootTarget\":\"SDCard\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":\"{{$bootLoaderName}}\",{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":\"{{$bootLoaderPath}}\",{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":\"{{$deviceName}}\",{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.PchStorage\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"FlexBootTarget\":\"PCH\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":\"{{$bootLoaderName}}\",{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":\"{{$bootLoaderPath}}\",{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":\"{{$deviceName}}\",{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.Nvme\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"FlexBootTarget\":\"NVME\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":\"{{$bootLoaderName}}\",{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":\"{{$bootLoaderPath}}\",{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":\"{{$deviceName}}\",{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.San\"}} {{$bootLoaderName:=$device.BootLoader.Name}} {{$bootLoaderPath:=$device.BootLoader.Path}} {{$deviceName:=$device.BootLoader.Description}} \"FlexBootTargets\":[{\"CiscoVIC\": \"Yes\",\"FlexBootTarget\":\"SAN\",\"PciSlotId\":\"{{.global.GetVnicFcIf.output.Placement.Id}}\",\"WWPN\":\"{{.global.GetVnicFcIf.output.Wwpn}}\",\"LunId\":\"{{$device.Lun}}\",\"TargetWWPN\":\"{{$device.Wwpn}}\",{{if ne $bootLoaderName \"\"}}\"BootLoaderName\":\"{{$bootLoaderName}}\",{{end}}{{if ne $bootLoaderPath \"\"}}\"BootLoaderPath\":\"{{$bootLoaderPath}}\",{{end}}{{if ne $deviceName \"\"}}\"DeviceName\":\"{{$deviceName}}\",{{end}}\"BootOrder\":1}]}} {{else if eq $device.ObjectType \"boot.Pxe\"}} {{$IpType:=$device.IpType}} \"FlexBootTargets\":[{\"CiscoVIC\": \"Yes\",\"FlexBootTarget\":\"LAN\",\"PciSlotId\":\"{{.global.GetVnicEthIf.output.Placement.Id}}\",\"MACAddress\":\"{{.global.GetVnicEthIf.output.MacAddress}}\",\"BootOrder\":1}]}}            {{end}} {{end}}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"SetOneTimeBoot","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.SetOneTimeBoot.output.HttpStatusCode 200}}","Message":"{{.global.SetOneTimeBoot.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"One-Time Boot device is configured to {{.global.task.input.OneTimeBootDevice}}","ObjectType":"workflow.Outcome"}],"Protocol":"https","TargetType":"Endpoint","Url":"http://127.0.0.1:444/cisco/blob/Intersight2BiosOneTimeBootOrder"}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ManagementMode":"Intersight"}},"Description":"Configures the chosen device as the one-time boot device for the FI Managed server. This device will be used when the server powers on the next time.","Name":"SetFIManagedServerOneTimeBootDeviceImpl","ObjectType":"workflow.BatchApiExecutor","Output":{},"SharedScope":"shared","SkipOnCondition":"{{not .global.task.input.OneTimeBootDevice}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetFIManagedServerOneTimeBootDeviceImpl\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"QueryServerSettingMo","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.QueryServerSettingMo.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.QueryServerSettingMo.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"{{ (lt (len .global.QueryServerSettingMo.output.Results)  1) }}","Error":true,"Message":"Could not find ServerSettings for the Server Moid {{.global.task.input.Server.Moid}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"ServerSettings for Server Moid {{.global.task.input.Server.Moid}} found successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Results","ObjectType":"content.Parameter","Path":"$.Results","Type":"collection"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Moid","ObjectType":"content.Parameter","Path":"$.Results[0].Moid","Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/ServerSettings?$filter=Server.Moid eq '{{.global.task.input.Server.Moid}}'"},{"Body":"{ {{if eq .global.task.input.PowerState \"Power On\"}}\"AdminPowerState\":\"PowerOn\" {{else if eq .global.task.input.PowerState \"Power Off\"}} \"AdminPowerState\":\"PowerOff\" {{else if eq .global.task.input.PowerState \"Power Cycle\"}} \"AdminPowerState\":\"PowerCycle\" {{else if eq .global.task.input.PowerState \"Hard Reset\"}} \"AdminPowerState\":\"HardReset\" {{end}} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"SetState","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.SetState.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.SetState.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"{{(eq .global.task.input.PowerState \"Power Off\")}}","Message":"Server Powered off successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{(eq .global.task.input.PowerState \"Power On\")}}","Message":"Server Powered on successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{(eq .global.task.input.PowerState \"Power Cycle\")}}","Message":"Server Power cycled successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{(eq .global.task.input.PowerState \"Hard Reset\")}}","Message":"Server Hard Reset successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"MoRef","ItemType":"simple","Name":"Workflow","ObjectType":"content.Parameter","Path":"$.RunningWorkflow","Type":"complex"}],"Types":[{"Name":"MoRef","ObjectType":"content.ComplexType","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ObjectType","ObjectType":"content.Parameter","Path":"$.ObjectType","Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Moid","ObjectType":"content.Parameter","Path":"$.Moid","Type":"simple"}]}]},"TargetType":"Local","Url":"/v1/compute/ServerSettings/{{.global.QueryServerSettingMo.output.Moid}}"}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Sets Server Power state to Power On, Power Off, Power Cycle or Hard Reset.","Name":"SetServerPowerStateImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Workflow":"{{.global.SetState.output.Workflow  | ToJson}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"SetServerPowerStateImpl\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetConnectionStatus","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{if index .global.task.input \"Server\"}}false{{else}}true{{end}}","Message":"Required input 'Server' is not found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{eq .global.GetConnectionStatus.output.HttpStatusCode 404}}","Message":"Server does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.GetConnectionStatus.output.HttpStatusCode 200}}","Message":"{{.global.GetConnectionStatus.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if eq .global.GetConnectionStatus.output.ConnectionStatus \"Connected\"}}false {{else}} true {{end}}","Message":"Server is no longer connected.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConnectionStatus","ObjectType":"content.Parameter","Path":"$.Results[0].RegisteredDevice.ConnectionStatus","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice&$filter=Moid eq '{{if index .global.task.input \"Server\"}}{{.global.task.input.Server.Moid}}{{else}}null{{end}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetAssociatedServerProfile","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetAssociatedServerProfile.output.HttpStatusCode 200}}","Message":"{{.global.GetAssociatedServerProfile.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{gt .global.GetAssociatedServerProfile.output.AssociatedProfileCount 0.0}}","Message":"Server is associated with a profile. Please use Virtual Media policy to change the device mappings.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"true","Message":"Profile fetched successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AssociatedProfileCount","ObjectType":"content.Parameter","Path":"$.Count","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles?$filter='AssociatedServer.Moid' eq '{{.global.task.input.Server.Moid}}'&$count=true"},{"Body":"<configConfMo inHierarchical=\"true\" dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\"><inConfig> <commVMediaMap dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\" volumeName=\"{{.global.task.input.VolumeName}}\" {{if .global.task.input.DeleteMapping}} status=\"deleted\" {{else}}adminAction=\"save-unmapped-volume\"{{end}}/></inConfig></configConfMo>","ContentType":"xml","Name":"UnmapNamedVMediaMapping","ObjectType":"workflow.XmlApi","Outcomes":[{"Condition":"{{if .global.UnmapNamedVMediaMapping.output.ErrorDescription}}true{{else}}false{{end}}","Message":"{{.global.UnmapNamedVMediaMapping.output.ErrorDescription}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if .global.UnmapNamedVMediaMapping.output.Error }}true{{else}}false{{end}}","Message":"{{.global.UnmapNamedVMediaMapping.output.Error}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Virtual media volume dismounted","ObjectType":"workflow.Outcome"}],"ResponseSpec":{"ErrorParameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"//configConfMo/@errorCode","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorDescription","ObjectType":"content.Parameter","Path":"//configConfMo/@errorDescr","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Error","ObjectType":"content.Parameter","Path":"@errorDescr","Secure":false,"Type":"simple"}],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"MappingStatus","ObjectType":"content.Parameter","Path":"//commVMediaMap/@mappingStatus","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{not .global.task.input.VolumeName}}"},{"Body":"<configResolveChildren inDn=\"sys/svc-ext/vmedia-svc\" inHierarchical=\"false\"/>","ContentType":"xml","Name":"QueryVirtualMediaMaps","ObjectType":"workflow.XmlApi","Outcomes":[{"Condition":"{{if .global.QueryVirtualMediaMaps.output.ErrorDescription}}true{{else}}false{{end}}","Message":"{{.global.QueryVirtualMediaMaps.output.ErrorDescription}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if .global.QueryVirtualMediaMaps.output.Error }}true{{else}}false{{end}}","Message":"{{.global.QueryVirtualMediaMaps.output.Error}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{and .global.task.input.DeleteMapping (eq (len .global.QueryVirtualMediaMaps.output.Volumes) 0) (eq (len .global.QueryVirtualMediaMaps.output.SavedVolumes) 0)}}","Message":"No volumes to delete.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{eq (len .global.QueryVirtualMediaMaps.output.Volumes) 0}}","Message":"No volumes to unmap.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"true","Message":"Got the volumes","ObjectType":"workflow.Outcome"}],"ResponseSpec":{"ErrorParameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"//configConfMo/@errorCode","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorDescription","ObjectType":"content.Parameter","Path":"//configConfMo/@errorDescr","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Error","ObjectType":"content.Parameter","Path":"@errorDescr","Secure":false,"Type":"simple"}],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Volumes","ObjectType":"content.Parameter","Path":"//commVMediaMap/@volumeName","Secure":false,"Type":"collection"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SavedVolumes","ObjectType":"content.Parameter","Path":"//commSavedVMediaMap/@volumeName","Secure":false,"Type":"collection"}],"Types":[]},"SkipOnCondition":"{{if .global.task.input.VolumeName}}{{if ne .global.task.input.VolumeName \"\"}}true{{else}}false{{end}}{{else}}{{end}}"},{"Body":"<configConfMos inHierarchical=\"false\"><inConfigs> {{$volumes:=.global.QueryVirtualMediaMaps.output.Volumes}}{{$savedVolumes:=.global.QueryVirtualMediaMaps.output.SavedVolumes}}{{$delete:=.global.task.input.DeleteMapping}} {{range $volume := $volumes}} <pair key=\"sys/svc-ext/vmedia-svc/vmmap-{{$volume}}\"> <commVMediaMap dn=\"sys/svc-ext/vmedia-svc/vmmap-{{$volume}}\" volumeName=\"{{$volume}}\" {{if $delete}} status=\"deleted\" {{else}}  adminAction=\"save-unmapped-volume\"{{end}}/> </pair> {{end}} {{if $delete}} {{range $volume := $savedVolumes}} <pair key=\"sys/svc-ext/vmedia-svc/saved-vmmap-{{$volume}}\"> <commSavedVMediaMap dn=\"sys/svc-ext/vmedia-svc/saved-vmmap-{{$volume}}\" volumeName=\"{{$volume}}\" adminAction=\"delete-volume\" /> </pair> {{end}} {{end}} </inConfigs></configConfMos>","ContentType":"xml","Name":"UnmapVMediaMapping","ObjectType":"workflow.XmlApi","Outcomes":[{"Condition":"{{if .global.UnmapVMediaMapping.output.ErrorDescription}}true{{else}}false{{end}}","Message":"{{.global.UnmapVMediaMapping.output.ErrorDescription}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if .global.UnmapVMediaMapping.output.Error }}true{{else}}false{{end}}","Message":"{{.global.UnmapVMediaMapping.output.Error}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Virtual media volume dismounted","ObjectType":"workflow.Outcome"}],"ResponseSpec":{"ErrorParameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"//configConfMo/@errorCode","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorDescription","ObjectType":"content.Parameter","Path":"//configConfMo/@errorDescr","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Error","ObjectType":"content.Parameter","Path":"@errorDescr","Secure":false,"Type":"simple"}],"ObjectType":"content.Grammar","Parameters":[],"Types":[]},"SkipOnCondition":"{{if .global.task.input.VolumeName}}{{if (ne .global.task.input.VolumeName \"\")}}true{{else}}false{{end}}{{else}}{{if and .global.task.input.DeleteMapping}}{{if (and (eq (len .global.QueryVirtualMediaMaps.output.Volumes) 0) (eq (len .global.QueryVirtualMediaMaps.output.SavedVolumes) 0))}}true{{else}}false{{end}}{{else}}{{if (eq (len .global.QueryVirtualMediaMaps.output.Volumes) 0)}}true{{else}}false{{end}}{{end}}{{end}}"}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ManagementMode":"IntersightStandalone"}},"Description":"Dismounts vMedia device on a standalone server","Name":"DismountStandaloneServerVirtualMediaDevice","ObjectType":"workflow.BatchApiExecutor","SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"DismountStandaloneServerVirtualMediaDevice\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetConnectionStatus","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{if index .global.task.input \"Server\"}}false{{else}}true{{end}}","Message":"Required input 'Server' is not found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{eq .global.GetConnectionStatus.output.HttpStatusCode 404}}","Message":"Server does not exist.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ne .global.GetConnectionStatus.output.HttpStatusCode 200}}","Message":"{{.global.GetConnectionStatus.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if eq .global.GetConnectionStatus.output.ConnectionStatus \"Connected\"}}false {{else}} true {{end}}","Message":"Server is no longer connected.","ObjectType":"workflow.Outcome","Type":"TerminalError"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ConnectionStatus","ObjectType":"content.Parameter","Path":"$.Results[0].RegisteredDevice.ConnectionStatus","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/compute/PhysicalSummaries?$expand=RegisteredDevice($select=ConnectionStatus)&$select=RegisteredDevice&$filter=Moid eq '{{if index .global.task.input \"Server\"}}{{.global.task.input.Server.Moid}}{{else}}null{{end}}'"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetAssociatedServerProfile","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ne .global.GetAssociatedServerProfile.output.HttpStatusCode 200}}","Message":"{{.global.GetAssociatedServerProfile.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{gt .global.GetAssociatedServerProfile.output.AssociatedProfileCount 0.0}}","Message":"Server is associated with a profile. Please use Virtual Media policy to change the device mappings.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"true","Message":"Profile fetched successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AssociatedProfileCount","ObjectType":"content.Parameter","Path":"$.Count","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/server/Profiles?$filter='AssociatedServer.Moid' eq '{{.global.task.input.Server.Moid}}'&$count=true"},{"Body":"<configConfMo inHierarchical=\"true\" dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\"> <inConfig> {{$ipv6:=ge (len (FindAllString .global.task.input.RemoteFile.HostName \":\") | ToJson) \"2\"}} {{$httpHeader:=\"\"}} {{ if or (eq .global.task.input.MountProtocol \"http\") (eq .global.task.input.MountProtocol \"https\")}} {{$httpHeader = (print .global.task.input.MountProtocol \"://\")}} {{end}} {{$mountProtocol:=.global.task.input.MountProtocol}} {{if $httpHeader}}{{ $mountProtocol = \"www\"}}{{end}} {{$mountOptions:=.global.task.input.MountOptions}}{{$sec:=\"\"}}{{$filePrefix:=\"\"}} {{if eq $mountProtocol \"cifs\"}} {{$filePrefix = \"//\"}} {{if (not (or (eq .global.task.input.AuthenticationProtocol \"none\") (eq .global.task.input.AuthenticationProtocol \"\")))}} {{$sec = (print \"sec=\" .global.task.input.AuthenticationProtocol)}} {{end}} {{end}} {{if $sec}} {{if $mountOptions}} {{if not (ContainsString $mountOptions $sec)}} {{$mountOptions = (print $mountOptions \",\" $sec)}} {{end}} {{else}}{{$mountOptions = $sec}} {{end}} {{end}} <commVMediaMap dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\" volumeName=\"{{.global.task.input.VolumeName}}\" remoteShare=\"{{$httpHeader}}{{$filePrefix}}{{if $ipv6}}[{{end}}{{.global.task.input.RemoteFile.HostName}}{{if $ipv6}}]{{end}}{{if eq $mountProtocol \"nfs\"}}:{{end}}{{.global.task.input.RemoteFile.RemotePath}}\" remoteFile=\"{{.global.task.input.RemoteFile.RemoteFile}}\" map=\"{{$mountProtocol}}\" {{if index .global.task.input.RemoteFile \"Credentials\" }} {{if index .global.task.input.RemoteFile.Credentials \"Username\"}} username=\"{{.global.task.input.RemoteFile.Credentials.Username}}\"{{end}}{{end}} {{ if index .global.task.input.RemoteFile \"Credentials\"}}{{if index .global.task.input.RemoteFile.Credentials \"Password\"}} password=\"{{.global.task.input.RemoteFile.Credentials.Password}}\"{{end}}{{end}} {{if $mountOptions }} mountOptions=\"{{$mountOptions}}\" {{ end }} /></inConfig></configConfMo>","ContentType":"xml","Name":"MountDevice","ObjectType":"workflow.XmlApi","Outcomes":[{"Condition":"{{if .global.MountDevice.output.ErrorDescription }}true{{else}}false{{end}}","Message":"{{.global.MountDevice.output.ErrorDescription}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if .global.MountDevice.output.Error }}true{{else}}false{{end}}","Message":"{{.global.MountDevice.output.Error}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"true","Message":"Virtual media mapping created","ObjectType":"workflow.Outcome"}],"ResponseSpec":{"ErrorParameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"//error/@errorCode","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorDescription","ObjectType":"content.Parameter","Path":"//error/@errorDescr","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InvocationResult","ObjectType":"content.Parameter","Path":"//error/@invocationResult","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Error","ObjectType":"content.Parameter","Path":"@errorDescr","Secure":false,"Type":"simple"}],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Status","ObjectType":"content.Parameter","Path":"//commVMediaMap/@status","Secure":false,"Type":"simple"}],"Types":[]}},{"Body":"<configResolveDn dn=\"sys/svc-ext/vmedia-svc/vmmap-{{.global.task.input.VolumeName}}\" inHierarchical=\"false\" />","ContentType":"xml","Name":"VMediaMappingStatus","ObjectType":"workflow.XmlApi","Outcomes":[{"Condition":"{{if .global.VMediaMappingStatus.output.ErrorDescription }}true{{else}}false{{end}}","Message":"{{.global.VMediaMappingStatus.output.ErrorDescription}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{if .global.MountDevice.output.Error }}true{{else}}false{{end}}","Message":"{{.global.MountDevice.output.Error}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{and (ne .global.VMediaMappingStatus.output.MappingStatus \"OK\") (ne .global.VMediaMappingStatus.output.MappingStatus \"In Progress\") }}","Message":"Mounting Virtual Media Device failed. {{.global.VMediaMappingStatus.output.MappingStatus}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{eq .global.VMediaMappingStatus.output.MappingStatus \"In Progress\"}}","Message":"Virtual Media Device mounting is In Progress.","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"true","Message":"Virtual Media Device mounted Successfully.","ObjectType":"workflow.Outcome"}],"ResponseSpec":{"ErrorParameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"//error/@errorCode","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ErrorDescription","ObjectType":"content.Parameter","Path":"//error/@errorDescr","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InvocationResult","ObjectType":"content.Parameter","Path":"//error/@invocationResult","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Error","ObjectType":"content.Parameter","Path":"@errorDescr","Secure":false,"Type":"simple"}],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"MappingStatus","ObjectType":"content.Parameter","Path":"//commVMediaMap/@mappingStatus","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeName","ObjectType":"content.Parameter","Path":"//commVMediaMap/@volumeName","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Status","ObjectType":"content.Parameter","Path":"//commVMediaMap/@status","Secure":false,"Type":"simple"}],"Types":[]},"StartDelay":10}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ManagementMode":"IntersightStandalone"}},"Description":"Mounts vMedia device on a standalone server","Name":"MountStandaloneServerVirtualMediaDevice","ObjectType":"workflow.BatchApiExecutor","RetryFromFailedApi":true,"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"MountStandaloneServerVirtualMediaDevice\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"{\"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Host\":\"{{.global.task.input.Host}}\",\"Vcenter\":\"{{.global.task.input.Vcenter}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"RemoveVmwareHost","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.RemoveVmwareHost.output.HttpStatusCode 200)}}","Error":true,"Message":"Failed to remove host. Message: {{.global.RemoveVmwareHost.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Host '{{.global.RemoveVmwareHost.output.Host}}' removed successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/task/Execute/RemoveHost"}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Remove host from selected hypervisor","Name":"RemoveVmwareHost","ObjectType":"workflow.BatchApiExecutor","Output":{"Host":"{{.global.RemoveVmwareHost.output.Host}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveVmwareHost\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"{ {{if .global.task.input.Cluster}}\"Cluster\":\"{{.global.task.input.Cluster}}\",{{ end }} \"ConnectNow\":{{.global.task.input.ConnectNow}},\"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Host\":\"{{.global.task.input.Host}}\",\"Password\":\"{{.global.task.input.Password}}\",\"Username\":\"{{.global.task.input.Username}}\",\"Vcenter\":\"{{.global.task.input.Vcenter}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewVmwareHost","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewVmwareHost.output.HttpStatusCode 200)}}","Error":true,"Message":"Failed to add host. Message: {{.global.NewVmwareHost.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Host '{{.global.NewVmwareHost.output.Host}}' added successfully.","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Hostname","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Timeout":300,"Url":"/task/Execute/AddHost"}],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Adds host to the selected hypervisor.","Name":"NewVmwareHost","ObjectType":"workflow.BatchApiExecutor","Output":{"Host":"{{.global.NewVmwareHost.output.Host}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewVmwareHost\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"}]